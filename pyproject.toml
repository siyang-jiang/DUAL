[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "dual-fsl"
dynamic = ["version"]
description = "DUAL: Dual Alignment Framework for Few-shot Learning with Inter-Set and Intra-Set Shifts"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Siyang Jiang", email = "your.email@domain.com"},
]
keywords = ["few-shot learning", "meta-learning", "computer vision", "deep learning"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=1.12.0",
    "torchvision>=0.13.0",
    "numpy>=1.21.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "Pillow>=8.3.0",
    "tqdm>=4.62.0",
    "omegaconf>=2.1.0",
    "hydra-core>=1.1.0",
    "wandb>=0.12.0",
    "albumentations>=1.1.0",
    "opencv-python>=4.5.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "tensorboard>=2.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "isort>=5.0",
    "flake8>=3.8",
    "mypy>=0.900",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=0.5",
    "myst-parser>=0.15",
]

[project.urls]
Homepage = "https://github.com/siyang-jiang/DUAL"
Repository = "https://github.com/siyang-jiang/DUAL.git"
Issues = "https://github.com/siyang-jiang/DUAL/issues"

[project.scripts]
dual-train = "dual.train:main"
dual-eval = "dual.evaluate:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
dual = ["configs/*.yaml", "configs/**/*.yaml"]

[tool.setuptools_scm]
write_to = "src/dual/_version.py"

[tool.black]
line-length = 88
target-version = ["py38"]
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "integration: marks tests as integration tests (deselect with '-m \"not integration\"')",
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true